{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Assignment 2_CNN_(fasion_mnist)_23387","provenance":[],"collapsed_sections":[],"toc_visible":true,"authorship_tag":"ABX9TyNCTDUT27GDHmuqcaGPUlDn"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"1TpaQnQqAsqY","executionInfo":{"status":"ok","timestamp":1635931300010,"user_tz":-300,"elapsed":538,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}}},"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt \n","import seaborn as sns\n","import tensorflow as tf\n","from tensorflow import keras\n","\n"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"id":"Y_rhHeQkBkjZ","executionInfo":{"status":"ok","timestamp":1635931300550,"user_tz":-300,"elapsed":3,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}}},"source":["from keras.datasets import fashion_mnist\n","(train_X,train_Y), (test_X,test_Y) = fashion_mnist.load_data()"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ELybf6RtBsT2","executionInfo":{"status":"ok","timestamp":1635931300912,"user_tz":-300,"elapsed":3,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"3c12fdce-cd7c-4030-f54f-fc07ccc5b836"},"source":["print('Training data shape : ', train_X.shape, train_Y.shape)\n","\n","print('Testing data shape : ', test_X.shape, test_Y.shape)"],"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Training data shape :  (60000, 28, 28) (60000,)\n","Testing data shape :  (10000, 28, 28) (10000,)\n"]}]},{"cell_type":"markdown","metadata":{"id":"MeWMeYloVuk9"},"source":["As seen above, training set has 60000 images, each with 28x28 pixels. Testing set has 10000 images, each with 28x28 pixels."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c2kO1N2UClo3","executionInfo":{"status":"ok","timestamp":1635931302042,"user_tz":-300,"elapsed":4,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"d6db5fdb-cef6-45f8-93d0-a05f3f5b5088"},"source":["classes=np.unique(train_Y) # 10 classes\n","classes"],"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], dtype=uint8)"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NOHTr5L7WSkA","executionInfo":{"status":"ok","timestamp":1635931303594,"user_tz":-300,"elapsed":8,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"bfeca091-9dab-4e2c-9ee6-4f18afd89884"},"source":["len(classes)"],"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["10"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"id":"EtiBosJTWYUq","executionInfo":{"status":"ok","timestamp":1635931311638,"user_tz":-300,"elapsed":359,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"6c8654fc-995f-499d-d8db-482bbb6d9f93"},"source":["plt.imshow(train_X[0,:,:],cmap='gray') # visualising the first image\n","print('Class assigned: ', train_Y[0]) # class assigned"],"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["Class assigned:  9\n"]},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aLJTQNK2W3Xs","executionInfo":{"status":"ok","timestamp":1635931326292,"user_tz":-300,"elapsed":339,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"8fbb686f-71cc-4642-f0f8-dec5c5ae96e5"},"source":["# Let's reshape our image to tensor format of 28x28x1\n","\n","train_X=train_X.reshape(-1,28,28,1)\n","test_X=test_X.reshape(-1,28,28,1)\n","print(train_X.shape)\n","print(test_X.shape)"],"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["(60000, 28, 28, 1)\n","(10000, 28, 28, 1)\n"]}]},{"cell_type":"code","metadata":{"id":"HUPcgCOAYP_s","executionInfo":{"status":"ok","timestamp":1635931329520,"user_tz":-300,"elapsed":576,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}}},"source":["# Normalization\n","\n","train_X = train_X.astype('float32')\n","test_X = test_X.astype('float32')\n","train_X = train_X / 255\n","test_X = test_X / 255"],"execution_count":21,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"GmSEtv2sFVp5"},"source":["Machine learning algoritms don't work well with categorical data directly so we have to one hot encode the class column. This will increase the class column size to 10 since there are 10 classes."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T58Ew-_sYXrG","executionInfo":{"status":"ok","timestamp":1635931334547,"user_tz":-300,"elapsed":470,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"6511af24-f5e8-4d7b-f172-fe58a169cc11"},"source":["# Conversion of label data to one hot encoded vectors\n","from tensorflow.keras.utils import to_categorical\n","\n","train_Y_one_hot = to_categorical(train_Y)\n","test_Y_one_hot = to_categorical(test_Y)\n","\n","print('Original label:', train_Y[0])\n","print('After conversion to one-hot:', train_Y_one_hot[0])"],"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Original label: 9\n","After conversion to one-hot: [0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]\n"]}]},{"cell_type":"code","metadata":{"id":"FN-UEhgWY7DG","executionInfo":{"status":"ok","timestamp":1635931473272,"user_tz":-300,"elapsed":344,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}}},"source":["# Now let's split the data into training and validation set \n","\n","from sklearn.model_selection import train_test_split\n","train_X,valid_X,train_label,valid_label = train_test_split(train_X, train_Y_one_hot, test_size=0.2, random_state=42)\n"],"execution_count":23,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mb5uHdrUHUIG","executionInfo":{"status":"ok","timestamp":1635931556274,"user_tz":-300,"elapsed":360,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"f0b837fc-00d2-401a-f51d-106139e09b5b"},"source":["print(train_X.shape)\n","print(valid_X.shape)\n","print(train_label.shape)\n","print(valid_label.shape)\n","\n","# the shape of traininhg and validation set looks good"],"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["(48000, 28, 28, 1)\n","(12000, 28, 28, 1)\n","(48000, 10)\n","(12000, 10)\n"]}]},{"cell_type":"code","metadata":{"id":"RgO50Gk9HiFf","executionInfo":{"status":"ok","timestamp":1635932858694,"user_tz":-300,"elapsed":333,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}}},"source":["# modules to train the model\n","\n","import keras\n","from keras.models import Sequential,Input,Model\n","from keras.layers import Dense, Dropout, Flatten\n","from keras.layers import Conv2D, MaxPooling2D\n","from keras.layers.advanced_activations import LeakyReLU"],"execution_count":30,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"_b6OvhkCNn5U"},"source":["Training the model with 1 convolution and pooling layer"]},{"cell_type":"code","metadata":{"id":"g79IsRUSMD8Y","executionInfo":{"status":"ok","timestamp":1635934081184,"user_tz":-300,"elapsed":360,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}}},"source":["model=Sequential()\n","model.add((Conv2D(32, kernel_size=(3, 3),activation='relu',input_shape=(28,28,1),padding='same')))\n","model.add(MaxPooling2D((2, 2),padding='same'))\n","model.add(Flatten())\n","model.add(Dense(10, activation='softmax'))\n"],"execution_count":33,"outputs":[]},{"cell_type":"code","metadata":{"id":"lYvRfnd9QzwC","executionInfo":{"status":"ok","timestamp":1635934421540,"user_tz":-300,"elapsed":350,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}}},"source":["# compile the model\n","\n","from tensorflow.keras.optimizers import SGD\n","sgd=SGD(learning_rate=0.001, momentum=0.9)\n","model.compile(loss='categorical_crossentropy', optimizer=sgd,metrics=['accuracy'])\n","\n"],"execution_count":34,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gYq3W6EcSjtz","executionInfo":{"status":"ok","timestamp":1635934441191,"user_tz":-300,"elapsed":353,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"fac36ad9-53f7-4a2d-a88b-f3754a283e51"},"source":["model.summary()"],"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_2\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","conv2d_2 (Conv2D)            (None, 28, 28, 32)        320       \n","_________________________________________________________________\n","max_pooling2d_2 (MaxPooling2 (None, 14, 14, 32)        0         \n","_________________________________________________________________\n","flatten (Flatten)            (None, 6272)              0         \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 10)                62730     \n","=================================================================\n","Total params: 63,050\n","Trainable params: 63,050\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R_xbzPEkSlZ7","executionInfo":{"status":"ok","timestamp":1635935459249,"user_tz":-300,"elapsed":499321,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"5286818c-44fc-464c-b6f2-57a3c057ea52"},"source":["history=model.fit(train_X, train_label, batch_size=64,epochs=100,verbose=1,validation_data=(valid_X, valid_label))\n","history"],"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","750/750 [==============================] - 34s 6ms/step - loss: 0.8795 - accuracy: 0.7131 - val_loss: 0.5991 - val_accuracy: 0.7913\n","Epoch 2/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.5427 - accuracy: 0.8102 - val_loss: 0.5180 - val_accuracy: 0.8195\n","Epoch 3/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.4959 - accuracy: 0.8255 - val_loss: 0.5014 - val_accuracy: 0.8257\n","Epoch 4/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.4695 - accuracy: 0.8366 - val_loss: 0.4697 - val_accuracy: 0.8354\n","Epoch 5/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.4520 - accuracy: 0.8435 - val_loss: 0.4496 - val_accuracy: 0.8424\n","Epoch 6/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.4405 - accuracy: 0.8471 - val_loss: 0.4297 - val_accuracy: 0.8504\n","Epoch 7/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.4286 - accuracy: 0.8518 - val_loss: 0.4289 - val_accuracy: 0.8494\n","Epoch 8/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.4211 - accuracy: 0.8548 - val_loss: 0.4213 - val_accuracy: 0.8503\n","Epoch 9/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.4100 - accuracy: 0.8590 - val_loss: 0.4225 - val_accuracy: 0.8558\n","Epoch 10/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.4010 - accuracy: 0.8619 - val_loss: 0.3982 - val_accuracy: 0.8611\n","Epoch 11/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3948 - accuracy: 0.8643 - val_loss: 0.3935 - val_accuracy: 0.8641\n","Epoch 12/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3882 - accuracy: 0.8656 - val_loss: 0.3817 - val_accuracy: 0.8677\n","Epoch 13/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3812 - accuracy: 0.8690 - val_loss: 0.3878 - val_accuracy: 0.8652\n","Epoch 14/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3760 - accuracy: 0.8705 - val_loss: 0.3716 - val_accuracy: 0.8685\n","Epoch 15/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3716 - accuracy: 0.8709 - val_loss: 0.3722 - val_accuracy: 0.8706\n","Epoch 16/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3665 - accuracy: 0.8734 - val_loss: 0.3648 - val_accuracy: 0.8733\n","Epoch 17/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3598 - accuracy: 0.8773 - val_loss: 0.3687 - val_accuracy: 0.8716\n","Epoch 18/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3589 - accuracy: 0.8762 - val_loss: 0.3673 - val_accuracy: 0.8712\n","Epoch 19/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3527 - accuracy: 0.8784 - val_loss: 0.3538 - val_accuracy: 0.8783\n","Epoch 20/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3479 - accuracy: 0.8809 - val_loss: 0.3576 - val_accuracy: 0.8787\n","Epoch 21/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3459 - accuracy: 0.8805 - val_loss: 0.3476 - val_accuracy: 0.8779\n","Epoch 22/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3408 - accuracy: 0.8838 - val_loss: 0.3487 - val_accuracy: 0.8767\n","Epoch 23/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3403 - accuracy: 0.8827 - val_loss: 0.3665 - val_accuracy: 0.8696\n","Epoch 24/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3357 - accuracy: 0.8830 - val_loss: 0.3426 - val_accuracy: 0.8802\n","Epoch 25/100\n","750/750 [==============================] - 5s 7ms/step - loss: 0.3338 - accuracy: 0.8848 - val_loss: 0.3458 - val_accuracy: 0.8768\n","Epoch 26/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3299 - accuracy: 0.8860 - val_loss: 0.3520 - val_accuracy: 0.8747\n","Epoch 27/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3259 - accuracy: 0.8866 - val_loss: 0.3470 - val_accuracy: 0.8770\n","Epoch 28/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3241 - accuracy: 0.8880 - val_loss: 0.3374 - val_accuracy: 0.8809\n","Epoch 29/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3214 - accuracy: 0.8894 - val_loss: 0.3334 - val_accuracy: 0.8832\n","Epoch 30/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3187 - accuracy: 0.8896 - val_loss: 0.3340 - val_accuracy: 0.8832\n","Epoch 31/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3181 - accuracy: 0.8899 - val_loss: 0.3549 - val_accuracy: 0.8741\n","Epoch 32/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3139 - accuracy: 0.8906 - val_loss: 0.3274 - val_accuracy: 0.8845\n","Epoch 33/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3111 - accuracy: 0.8921 - val_loss: 0.3377 - val_accuracy: 0.8807\n","Epoch 34/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3100 - accuracy: 0.8930 - val_loss: 0.3250 - val_accuracy: 0.8867\n","Epoch 35/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3062 - accuracy: 0.8933 - val_loss: 0.3322 - val_accuracy: 0.8832\n","Epoch 36/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3053 - accuracy: 0.8942 - val_loss: 0.3227 - val_accuracy: 0.8878\n","Epoch 37/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3022 - accuracy: 0.8958 - val_loss: 0.3188 - val_accuracy: 0.8878\n","Epoch 38/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.3009 - accuracy: 0.8956 - val_loss: 0.3248 - val_accuracy: 0.8827\n","Epoch 39/100\n","750/750 [==============================] - 5s 7ms/step - loss: 0.2987 - accuracy: 0.8966 - val_loss: 0.3173 - val_accuracy: 0.8881\n","Epoch 40/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2961 - accuracy: 0.8976 - val_loss: 0.3208 - val_accuracy: 0.8869\n","Epoch 41/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2949 - accuracy: 0.8979 - val_loss: 0.3152 - val_accuracy: 0.8891\n","Epoch 42/100\n","750/750 [==============================] - 5s 7ms/step - loss: 0.2945 - accuracy: 0.8982 - val_loss: 0.3156 - val_accuracy: 0.8877\n","Epoch 43/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2917 - accuracy: 0.8985 - val_loss: 0.3269 - val_accuracy: 0.8850\n","Epoch 44/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2890 - accuracy: 0.8999 - val_loss: 0.3110 - val_accuracy: 0.8899\n","Epoch 45/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2878 - accuracy: 0.9006 - val_loss: 0.3120 - val_accuracy: 0.8914\n","Epoch 46/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2863 - accuracy: 0.9009 - val_loss: 0.3097 - val_accuracy: 0.8899\n","Epoch 47/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2843 - accuracy: 0.9004 - val_loss: 0.3083 - val_accuracy: 0.8917\n","Epoch 48/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2831 - accuracy: 0.9026 - val_loss: 0.3082 - val_accuracy: 0.8923\n","Epoch 49/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2810 - accuracy: 0.9015 - val_loss: 0.3024 - val_accuracy: 0.8931\n","Epoch 50/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2787 - accuracy: 0.9044 - val_loss: 0.3062 - val_accuracy: 0.8922\n","Epoch 51/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2786 - accuracy: 0.9022 - val_loss: 0.3038 - val_accuracy: 0.8913\n","Epoch 52/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2755 - accuracy: 0.9043 - val_loss: 0.3088 - val_accuracy: 0.8921\n","Epoch 53/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2748 - accuracy: 0.9044 - val_loss: 0.3154 - val_accuracy: 0.8885\n","Epoch 54/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2731 - accuracy: 0.9050 - val_loss: 0.3028 - val_accuracy: 0.8932\n","Epoch 55/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2722 - accuracy: 0.9053 - val_loss: 0.3029 - val_accuracy: 0.8908\n","Epoch 56/100\n","750/750 [==============================] - 5s 7ms/step - loss: 0.2700 - accuracy: 0.9072 - val_loss: 0.3010 - val_accuracy: 0.8937\n","Epoch 57/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2683 - accuracy: 0.9065 - val_loss: 0.2994 - val_accuracy: 0.8960\n","Epoch 58/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2676 - accuracy: 0.9068 - val_loss: 0.2957 - val_accuracy: 0.8954\n","Epoch 59/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2660 - accuracy: 0.9070 - val_loss: 0.3001 - val_accuracy: 0.8951\n","Epoch 60/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2656 - accuracy: 0.9078 - val_loss: 0.3018 - val_accuracy: 0.8941\n","Epoch 61/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2625 - accuracy: 0.9094 - val_loss: 0.2958 - val_accuracy: 0.8955\n","Epoch 62/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2607 - accuracy: 0.9087 - val_loss: 0.2957 - val_accuracy: 0.8963\n","Epoch 63/100\n","750/750 [==============================] - 5s 7ms/step - loss: 0.2600 - accuracy: 0.9099 - val_loss: 0.2953 - val_accuracy: 0.8952\n","Epoch 64/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2587 - accuracy: 0.9098 - val_loss: 0.3051 - val_accuracy: 0.8927\n","Epoch 65/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2578 - accuracy: 0.9099 - val_loss: 0.2986 - val_accuracy: 0.8938\n","Epoch 66/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2574 - accuracy: 0.9097 - val_loss: 0.2912 - val_accuracy: 0.8979\n","Epoch 67/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2553 - accuracy: 0.9116 - val_loss: 0.3001 - val_accuracy: 0.8917\n","Epoch 68/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2544 - accuracy: 0.9110 - val_loss: 0.2961 - val_accuracy: 0.8962\n","Epoch 69/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2539 - accuracy: 0.9110 - val_loss: 0.2889 - val_accuracy: 0.8997\n","Epoch 70/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2507 - accuracy: 0.9125 - val_loss: 0.2890 - val_accuracy: 0.8975\n","Epoch 71/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2498 - accuracy: 0.9133 - val_loss: 0.2914 - val_accuracy: 0.8963\n","Epoch 72/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2488 - accuracy: 0.9129 - val_loss: 0.2946 - val_accuracy: 0.8912\n","Epoch 73/100\n","750/750 [==============================] - 5s 7ms/step - loss: 0.2481 - accuracy: 0.9142 - val_loss: 0.2897 - val_accuracy: 0.8972\n","Epoch 74/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2457 - accuracy: 0.9144 - val_loss: 0.2879 - val_accuracy: 0.8973\n","Epoch 75/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2453 - accuracy: 0.9147 - val_loss: 0.2853 - val_accuracy: 0.8979\n","Epoch 76/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2434 - accuracy: 0.9161 - val_loss: 0.2841 - val_accuracy: 0.8988\n","Epoch 77/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2431 - accuracy: 0.9151 - val_loss: 0.2862 - val_accuracy: 0.8964\n","Epoch 78/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2420 - accuracy: 0.9158 - val_loss: 0.2989 - val_accuracy: 0.8913\n","Epoch 79/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2405 - accuracy: 0.9168 - val_loss: 0.2873 - val_accuracy: 0.8990\n","Epoch 80/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2396 - accuracy: 0.9160 - val_loss: 0.2921 - val_accuracy: 0.8948\n","Epoch 81/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2384 - accuracy: 0.9163 - val_loss: 0.2861 - val_accuracy: 0.8981\n","Epoch 82/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2380 - accuracy: 0.9175 - val_loss: 0.2824 - val_accuracy: 0.8999\n","Epoch 83/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2371 - accuracy: 0.9175 - val_loss: 0.2810 - val_accuracy: 0.8997\n","Epoch 84/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2354 - accuracy: 0.9186 - val_loss: 0.2817 - val_accuracy: 0.8984\n","Epoch 85/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2354 - accuracy: 0.9176 - val_loss: 0.2823 - val_accuracy: 0.9008\n","Epoch 86/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2339 - accuracy: 0.9193 - val_loss: 0.2829 - val_accuracy: 0.8999\n","Epoch 87/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2330 - accuracy: 0.9190 - val_loss: 0.2815 - val_accuracy: 0.8996\n","Epoch 88/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2321 - accuracy: 0.9196 - val_loss: 0.2816 - val_accuracy: 0.8988\n","Epoch 89/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2313 - accuracy: 0.9197 - val_loss: 0.2813 - val_accuracy: 0.9003\n","Epoch 90/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2301 - accuracy: 0.9194 - val_loss: 0.2821 - val_accuracy: 0.8989\n","Epoch 91/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2285 - accuracy: 0.9206 - val_loss: 0.2846 - val_accuracy: 0.8965\n","Epoch 92/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2283 - accuracy: 0.9195 - val_loss: 0.2818 - val_accuracy: 0.8998\n","Epoch 93/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2264 - accuracy: 0.9210 - val_loss: 0.2766 - val_accuracy: 0.9009\n","Epoch 94/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2262 - accuracy: 0.9201 - val_loss: 0.2836 - val_accuracy: 0.8963\n","Epoch 95/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2259 - accuracy: 0.9213 - val_loss: 0.2773 - val_accuracy: 0.9011\n","Epoch 96/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2253 - accuracy: 0.9214 - val_loss: 0.2771 - val_accuracy: 0.9026\n","Epoch 97/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2230 - accuracy: 0.9232 - val_loss: 0.2762 - val_accuracy: 0.9013\n","Epoch 98/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2225 - accuracy: 0.9230 - val_loss: 0.2769 - val_accuracy: 0.9016\n","Epoch 99/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2214 - accuracy: 0.9227 - val_loss: 0.2765 - val_accuracy: 0.9015\n","Epoch 100/100\n","750/750 [==============================] - 4s 6ms/step - loss: 0.2210 - accuracy: 0.9226 - val_loss: 0.2760 - val_accuracy: 0.9013\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fc40aad7150>"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":545},"id":"ztUmGFxgbbVO","executionInfo":{"status":"ok","timestamp":1635936948232,"user_tz":-300,"elapsed":1143,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"65cea3c0-8ce5-4026-b72b-a832395005c8"},"source":["accuracy = history.history['accuracy']\n","val_accuracy = history.history['val_accuracy']\n","loss = history.history['loss']\n","val_loss = history.history['val_loss']\n","epochs = range(len(accuracy))\n","plt.plot(epochs, accuracy, 'blue', label='Training accuracy')\n","plt.plot(epochs, val_accuracy, 'red', label='Validation accuracy')\n","plt.title('Training and validation accuracy')\n","plt.legend()\n","plt.figure()\n","plt.plot(epochs, loss, 'blue', label='Training loss')\n","plt.plot(epochs, val_loss, 'red', label='Validation loss')\n","plt.title('Training and validation loss')\n","plt.legend()\n","plt.show()"],"execution_count":41,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pBFG4nXWUmZ0","executionInfo":{"status":"ok","timestamp":1635936346315,"user_tz":-300,"elapsed":1266,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"bc2e650e-8b92-426b-805c-fd168157cc42"},"source":["test_score=model.evaluate(test_X, test_Y_one_hot, verbose=0)\n","\n","print('Loss on test data: ', test_score[0])\n","print('Accuracy on test data', test_score[1])\n","\n"],"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["Loss on test data:  0.2945636510848999\n","Accuracy on test data 0.89410001039505\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OT8UDTECZtni","executionInfo":{"status":"ok","timestamp":1635937245218,"user_tz":-300,"elapsed":1274,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"45169a9c-667d-4a56-99ca-81240d88ccc8"},"source":["preds=model.predict(test_X)\n","preds"],"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[2.6119702e-07, 1.6905522e-08, 2.3717246e-06, ..., 5.5685644e-03,\n","        8.9824776e-04, 9.8504919e-01],\n","       [1.5205039e-05, 7.9518926e-11, 9.9583721e-01, ..., 2.2060159e-17,\n","        5.6031060e-09, 5.2819585e-15],\n","       [1.7002004e-06, 9.9999321e-01, 2.6600580e-09, ..., 9.4621641e-13,\n","        3.4493358e-10, 2.4275009e-12],\n","       ...,\n","       [4.0574269e-03, 3.2501351e-08, 1.6926684e-03, ..., 4.3402824e-06,\n","        9.5881617e-01, 5.9665988e-09],\n","       [1.2190055e-08, 9.9998605e-01, 1.7677903e-11, ..., 6.9915455e-11,\n","        2.9661507e-10, 6.7185701e-09],\n","       [3.8016016e-05, 9.2917544e-06, 1.5373181e-03, ..., 4.3484155e-02,\n","        1.7023323e-02, 1.2973336e-03]], dtype=float32)"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8RXGNxOhdU-k","executionInfo":{"status":"ok","timestamp":1635937277099,"user_tz":-300,"elapsed":603,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"8000ab87-1b11-4097-a2ac-d0c894589b2e"},"source":["test_Y_one_hot"],"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0., 0., 0., ..., 0., 0., 1.],\n","       [0., 0., 1., ..., 0., 0., 0.],\n","       [0., 1., 0., ..., 0., 0., 0.],\n","       ...,\n","       [0., 0., 0., ..., 0., 1., 0.],\n","       [0., 1., 0., ..., 0., 0., 0.],\n","       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32)"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-FvD9flIddAT","executionInfo":{"status":"ok","timestamp":1635937371321,"user_tz":-300,"elapsed":345,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"558651d7-f839-486f-e188-16e8b09a8552"},"source":["y_pred=np.argmax(preds, axis=1)\n","y_pred"],"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([9, 2, 1, ..., 8, 1, 5])"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FeTam0nUdsRW","executionInfo":{"status":"ok","timestamp":1635937377987,"user_tz":-300,"elapsed":630,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"7c96e89c-51e5-4a8d-fd6f-b9dd2dd88885"},"source":["test_Y"],"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([9, 2, 1, ..., 8, 1, 5], dtype=uint8)"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lyJ17hn-d1gD","executionInfo":{"status":"ok","timestamp":1635937565402,"user_tz":-300,"elapsed":374,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"23775727-14a9-496d-ac01-46bea2a4662f"},"source":["from sklearn.metrics import classification_report\n","\n","print(classification_report(test_Y, y_pred))\n"],"execution_count":50,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.86      0.81      0.84      1000\n","           1       0.99      0.97      0.98      1000\n","           2       0.84      0.84      0.84      1000\n","           3       0.86      0.92      0.89      1000\n","           4       0.84      0.84      0.84      1000\n","           5       0.97      0.97      0.97      1000\n","           6       0.70      0.71      0.70      1000\n","           7       0.95      0.95      0.95      1000\n","           8       0.97      0.97      0.97      1000\n","           9       0.96      0.96      0.96      1000\n","\n","    accuracy                           0.89     10000\n","   macro avg       0.89      0.89      0.89     10000\n","weighted avg       0.89      0.89      0.89     10000\n","\n"]}]},{"cell_type":"code","metadata":{"id":"m6Naks4Oed_A","executionInfo":{"status":"ok","timestamp":1635937662748,"user_tz":-300,"elapsed":433,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}}},"source":[""],"execution_count":50,"outputs":[]}]}