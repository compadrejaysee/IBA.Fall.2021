{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Assignment 2_CNN_(cifar10)_23387","provenance":[{"file_id":"1N2ekfN5rdGsDAtkp05V0Av-7SnK1oH30","timestamp":1635943572472}],"collapsed_sections":[],"toc_visible":true,"authorship_tag":"ABX9TyPxV8t85XUuzHYkEYGA962J"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"IR1xEXncw3zi"},"source":["PART 1"]},{"cell_type":"code","metadata":{"id":"DsaKKCq5w0Go","executionInfo":{"status":"ok","timestamp":1636294696427,"user_tz":-300,"elapsed":3314,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}}},"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt \n","import seaborn as sns\n","import tensorflow as tf\n","from tensorflow import keras\n","\n","from tensorflow.keras import datasets\n","\n"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"Y_rhHeQkBkjZ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1635945227058,"user_tz":-300,"elapsed":5109,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"28856993-f1af-438f-c71a-7f553ad2b42a"},"source":["(train_X,train_Y), (test_X,test_Y) = datasets.cifar10.load_data()"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz\n","170500096/170498071 [==============================] - 2s 0us/step\n","170508288/170498071 [==============================] - 2s 0us/step\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ELybf6RtBsT2","executionInfo":{"status":"ok","timestamp":1635946252887,"user_tz":-300,"elapsed":571,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"ffa1e47e-b7b0-48e3-bdac-02298a19b8a7"},"source":["print('Training data shape : ', train_X.shape, train_Y.shape)\n","\n","print('Testing data shape : ', test_X.shape, test_Y.shape)"],"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Training data shape :  (50000, 32, 32, 3) (50000, 1)\n","Testing data shape :  (10000, 32, 32, 3) (10000, 1)\n"]}]},{"cell_type":"markdown","metadata":{"id":"MeWMeYloVuk9"},"source":["As seen above, training set has 50000 images, each with 32x32 pixels. Testing set has 10000 images, each with 32x32 pixels."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c2kO1N2UClo3","executionInfo":{"status":"ok","timestamp":1635946255552,"user_tz":-300,"elapsed":366,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"d9558c32-4d8e-4006-9507-b6337b746f1a"},"source":["classes=np.unique(train_Y) # 10 classes\n","classes"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], dtype=uint8)"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NOHTr5L7WSkA","executionInfo":{"status":"ok","timestamp":1635946257203,"user_tz":-300,"elapsed":6,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"4690c644-fc54-45c2-9007-d01f33301686"},"source":["len(classes)"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["10"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S_dtUVFLBclC","executionInfo":{"status":"ok","timestamp":1635946779130,"user_tz":-300,"elapsed":385,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"c16a7a1e-064d-4f92-f0d3-fab346d3b8f7"},"source":["train_Y"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[6],\n","       [9],\n","       [9],\n","       ...,\n","       [9],\n","       [1],\n","       [1]], dtype=uint8)"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6bTiZVbZBtt_","executionInfo":{"status":"ok","timestamp":1635946941381,"user_tz":-300,"elapsed":479,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"34192970-bf2a-4cb4-edfa-7f2ec7134513"},"source":["label_counts = dict(zip(*np.unique(train_Y, return_counts=True)))\n","label_counts # all classes have equal counts in the training data"],"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{0: 5000,\n"," 1: 5000,\n"," 2: 5000,\n"," 3: 5000,\n"," 4: 5000,\n"," 5: 5000,\n"," 6: 5000,\n"," 7: 5000,\n"," 8: 5000,\n"," 9: 5000}"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t9zADbjT_xKU","executionInfo":{"status":"ok","timestamp":1635946924041,"user_tz":-300,"elapsed":385,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"37000bd3-c983-4fff-de06-0fe7bbad22ab"},"source":["test_Y"],"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[3],\n","       [8],\n","       [8],\n","       ...,\n","       [5],\n","       [1],\n","       [7]], dtype=uint8)"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ynuMViH8CQ5L","executionInfo":{"status":"ok","timestamp":1635947002410,"user_tz":-300,"elapsed":538,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"0dc33dfb-3d31-4067-c932-a4830c1c9b78"},"source":["label_counts = dict(zip(*np.unique(test_Y, return_counts=True)))\n","label_counts # all classes have equal counts in the testing data"],"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{0: 1000,\n"," 1: 1000,\n"," 2: 1000,\n"," 3: 1000,\n"," 4: 1000,\n"," 5: 1000,\n"," 6: 1000,\n"," 7: 1000,\n"," 8: 1000,\n"," 9: 1000}"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":283},"id":"EtiBosJTWYUq","executionInfo":{"status":"ok","timestamp":1635947012413,"user_tz":-300,"elapsed":458,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"8466c5ab-a0a7-4a1f-92ee-1cf253db3009"},"source":["plt.imshow(train_X[0,:,:],cmap='gray') # visualising the first image\n","print('Class assigned: ', train_Y[0]) # class assigned"],"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["Class assigned:  [6]\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aLJTQNK2W3Xs","executionInfo":{"status":"ok","timestamp":1635947181387,"user_tz":-300,"elapsed":397,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"fc5855ab-f26a-4155-fc89-f5565fbfaac4"},"source":["# Since I did not have enough storage in my PC to download the cifar10 dataset, I imported it directly from the cifar10 module by Keras. This dataset was already reshaped into tensor format.\n","# Below code shows how the dataset would be reshaped into tensor format with 3 channels. \n","\n","#train_X=train_X.reshape(-1,32,32,3)\n","#test_X=test_X.reshape(-1,32,32,3)\n","print(train_X.shape)\n","print(test_X.shape)"],"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["(50000, 32, 32, 3)\n","(10000, 32, 32, 3)\n"]}]},{"cell_type":"code","metadata":{"id":"HUPcgCOAYP_s","executionInfo":{"status":"ok","timestamp":1635947189270,"user_tz":-300,"elapsed":949,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}}},"source":["# Normalization\n","\n","train_X = train_X.astype('float32')\n","test_X = test_X.astype('float32')\n","train_X = train_X / 255\n","test_X = test_X / 255"],"execution_count":23,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"GmSEtv2sFVp5"},"source":["Machine learning algoritms don't work well with categorical data directly so we have to one hot encode the class column. This will increase the class column size to 10 since there are 10 classes."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T58Ew-_sYXrG","executionInfo":{"status":"ok","timestamp":1635947193796,"user_tz":-300,"elapsed":449,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"14b64e59-47c8-4571-d935-834441b71079"},"source":["# Conversion of label data to one hot encoded vectors\n","from tensorflow.keras.utils import to_categorical\n","\n","train_Y_one_hot = to_categorical(train_Y)\n","test_Y_one_hot = to_categorical(test_Y)\n","\n","print('Original label:', train_Y[0])\n","print('After conversion to one-hot:', train_Y_one_hot[0])"],"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["Original label: [6]\n","After conversion to one-hot: [0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]\n"]}]},{"cell_type":"code","metadata":{"id":"FN-UEhgWY7DG","executionInfo":{"status":"ok","timestamp":1635947205579,"user_tz":-300,"elapsed":952,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}}},"source":["# Now let's split the data into training and validation set \n","\n","from sklearn.model_selection import train_test_split\n","train_X,valid_X,train_label,valid_label = train_test_split(train_X, train_Y_one_hot, test_size=0.2, random_state=42)\n"],"execution_count":25,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mb5uHdrUHUIG","executionInfo":{"status":"ok","timestamp":1635947208571,"user_tz":-300,"elapsed":916,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"d36ebd27-6fa4-4a9d-da81-09194ea3ef19"},"source":["print(train_X.shape)\n","print(valid_X.shape)\n","print(train_label.shape)\n","print(valid_label.shape)\n","\n","# the shape of traininhg and validation set looks good"],"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["(40000, 32, 32, 3)\n","(10000, 32, 32, 3)\n","(40000, 10)\n","(10000, 10)\n"]}]},{"cell_type":"code","metadata":{"id":"RgO50Gk9HiFf","executionInfo":{"status":"ok","timestamp":1635947214681,"user_tz":-300,"elapsed":386,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}}},"source":["# modules to train the model\n","\n","import keras\n","from keras.models import Sequential,Input,Model\n","from keras.layers import Dense, Dropout, Flatten\n","from keras.layers import Conv2D, MaxPooling2D\n","from keras.layers.advanced_activations import LeakyReLU"],"execution_count":27,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"_b6OvhkCNn5U"},"source":["Training the model with 1 convolution and pooling layer"]},{"cell_type":"code","metadata":{"id":"g79IsRUSMD8Y","executionInfo":{"status":"ok","timestamp":1635947534034,"user_tz":-300,"elapsed":464,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}}},"source":["model=Sequential()\n","model.add((Conv2D(32, kernel_size=(3, 3),activation='relu',input_shape=(32,32,3),padding='same')))\n","model.add(MaxPooling2D((2, 2),padding='same'))\n","model.add(Flatten())\n","model.add(Dense(10, activation='softmax'))\n"],"execution_count":32,"outputs":[]},{"cell_type":"code","metadata":{"id":"lYvRfnd9QzwC","executionInfo":{"status":"ok","timestamp":1635947569132,"user_tz":-300,"elapsed":371,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}}},"source":["# compile the model\n","\n","from tensorflow.keras.optimizers import SGD\n","sgd=SGD(learning_rate=0.001, momentum=0.9)\n","model.compile(loss='categorical_crossentropy', optimizer=sgd, metrics=['accuracy'])\n","\n"],"execution_count":33,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gYq3W6EcSjtz","executionInfo":{"status":"ok","timestamp":1635947572396,"user_tz":-300,"elapsed":358,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"bf98ef39-cfef-42d2-b026-6702f5d9f9b8"},"source":["model.summary()"],"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","conv2d_1 (Conv2D)            (None, 32, 32, 32)        896       \n","_________________________________________________________________\n","max_pooling2d_1 (MaxPooling2 (None, 16, 16, 32)        0         \n","_________________________________________________________________\n","flatten_1 (Flatten)          (None, 8192)              0         \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 10)                81930     \n","=================================================================\n","Total params: 82,826\n","Trainable params: 82,826\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R_xbzPEkSlZ7","executionInfo":{"status":"ok","timestamp":1635950836606,"user_tz":-300,"elapsed":3260365,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"e768706b-ce87-4ad8-a98f-1a125f68cd93"},"source":["history=model.fit(train_X, train_label, batch_size=64,epochs=100,verbose=1,validation_data=(valid_X, valid_label))\n","history"],"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","625/625 [==============================] - 37s 59ms/step - loss: 2.0133 - accuracy: 0.2851 - val_loss: 1.8808 - val_accuracy: 0.3380\n","Epoch 2/100\n","625/625 [==============================] - 32s 52ms/step - loss: 1.8216 - accuracy: 0.3663 - val_loss: 1.7753 - val_accuracy: 0.3707\n","Epoch 3/100\n","625/625 [==============================] - 34s 55ms/step - loss: 1.7286 - accuracy: 0.4029 - val_loss: 1.6912 - val_accuracy: 0.4102\n","Epoch 4/100\n","625/625 [==============================] - 34s 54ms/step - loss: 1.6381 - accuracy: 0.4330 - val_loss: 1.5892 - val_accuracy: 0.4494\n","Epoch 5/100\n","625/625 [==============================] - 32s 52ms/step - loss: 1.5423 - accuracy: 0.4696 - val_loss: 1.5112 - val_accuracy: 0.4711\n","Epoch 6/100\n","625/625 [==============================] - 33s 52ms/step - loss: 1.4618 - accuracy: 0.4966 - val_loss: 1.4352 - val_accuracy: 0.5050\n","Epoch 7/100\n","625/625 [==============================] - 32s 52ms/step - loss: 1.4000 - accuracy: 0.5151 - val_loss: 1.3965 - val_accuracy: 0.5143\n","Epoch 8/100\n","625/625 [==============================] - 32s 52ms/step - loss: 1.3522 - accuracy: 0.5330 - val_loss: 1.3551 - val_accuracy: 0.5292\n","Epoch 9/100\n","625/625 [==============================] - 33s 52ms/step - loss: 1.3194 - accuracy: 0.5430 - val_loss: 1.3328 - val_accuracy: 0.5333\n","Epoch 10/100\n","625/625 [==============================] - 32s 52ms/step - loss: 1.2898 - accuracy: 0.5546 - val_loss: 1.3105 - val_accuracy: 0.5439\n","Epoch 11/100\n","625/625 [==============================] - 32s 52ms/step - loss: 1.2663 - accuracy: 0.5624 - val_loss: 1.2938 - val_accuracy: 0.5513\n","Epoch 12/100\n","625/625 [==============================] - 33s 52ms/step - loss: 1.2485 - accuracy: 0.5688 - val_loss: 1.2842 - val_accuracy: 0.5535\n","Epoch 13/100\n","625/625 [==============================] - 33s 52ms/step - loss: 1.2341 - accuracy: 0.5745 - val_loss: 1.2663 - val_accuracy: 0.5610\n","Epoch 14/100\n","625/625 [==============================] - 33s 53ms/step - loss: 1.2176 - accuracy: 0.5814 - val_loss: 1.2560 - val_accuracy: 0.5631\n","Epoch 15/100\n","625/625 [==============================] - 33s 52ms/step - loss: 1.2029 - accuracy: 0.5857 - val_loss: 1.2579 - val_accuracy: 0.5635\n","Epoch 16/100\n","625/625 [==============================] - 33s 52ms/step - loss: 1.1918 - accuracy: 0.5885 - val_loss: 1.2445 - val_accuracy: 0.5629\n","Epoch 17/100\n","625/625 [==============================] - 33s 53ms/step - loss: 1.1825 - accuracy: 0.5923 - val_loss: 1.2362 - val_accuracy: 0.5669\n","Epoch 18/100\n","625/625 [==============================] - 33s 53ms/step - loss: 1.1665 - accuracy: 0.5987 - val_loss: 1.2365 - val_accuracy: 0.5719\n","Epoch 19/100\n","625/625 [==============================] - 33s 52ms/step - loss: 1.1572 - accuracy: 0.6015 - val_loss: 1.2236 - val_accuracy: 0.5766\n","Epoch 20/100\n","625/625 [==============================] - 34s 54ms/step - loss: 1.1468 - accuracy: 0.6028 - val_loss: 1.2082 - val_accuracy: 0.5808\n","Epoch 21/100\n","625/625 [==============================] - 33s 52ms/step - loss: 1.1350 - accuracy: 0.6101 - val_loss: 1.2079 - val_accuracy: 0.5828\n","Epoch 22/100\n","625/625 [==============================] - 33s 53ms/step - loss: 1.1227 - accuracy: 0.6137 - val_loss: 1.1996 - val_accuracy: 0.5851\n","Epoch 23/100\n","625/625 [==============================] - 33s 54ms/step - loss: 1.1118 - accuracy: 0.6162 - val_loss: 1.2058 - val_accuracy: 0.5805\n","Epoch 24/100\n","625/625 [==============================] - 33s 53ms/step - loss: 1.1005 - accuracy: 0.6230 - val_loss: 1.1852 - val_accuracy: 0.5936\n","Epoch 25/100\n","625/625 [==============================] - 32s 52ms/step - loss: 1.0904 - accuracy: 0.6231 - val_loss: 1.1914 - val_accuracy: 0.5872\n","Epoch 26/100\n","625/625 [==============================] - 32s 51ms/step - loss: 1.0809 - accuracy: 0.6292 - val_loss: 1.1789 - val_accuracy: 0.5868\n","Epoch 27/100\n","625/625 [==============================] - 32s 51ms/step - loss: 1.0690 - accuracy: 0.6333 - val_loss: 1.1655 - val_accuracy: 0.5983\n","Epoch 28/100\n","625/625 [==============================] - 32s 51ms/step - loss: 1.0590 - accuracy: 0.6341 - val_loss: 1.1483 - val_accuracy: 0.6070\n","Epoch 29/100\n","625/625 [==============================] - 32s 51ms/step - loss: 1.0478 - accuracy: 0.6385 - val_loss: 1.1474 - val_accuracy: 0.6040\n","Epoch 30/100\n","625/625 [==============================] - 32s 50ms/step - loss: 1.0371 - accuracy: 0.6428 - val_loss: 1.1591 - val_accuracy: 0.6033\n","Epoch 31/100\n","625/625 [==============================] - 32s 51ms/step - loss: 1.0305 - accuracy: 0.6457 - val_loss: 1.1276 - val_accuracy: 0.6146\n","Epoch 32/100\n","625/625 [==============================] - 32s 51ms/step - loss: 1.0193 - accuracy: 0.6496 - val_loss: 1.1368 - val_accuracy: 0.6072\n","Epoch 33/100\n","625/625 [==============================] - 32s 51ms/step - loss: 1.0129 - accuracy: 0.6515 - val_loss: 1.1220 - val_accuracy: 0.6154\n","Epoch 34/100\n","625/625 [==============================] - 32s 51ms/step - loss: 1.0030 - accuracy: 0.6561 - val_loss: 1.1403 - val_accuracy: 0.6073\n","Epoch 35/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.9925 - accuracy: 0.6583 - val_loss: 1.1088 - val_accuracy: 0.6185\n","Epoch 36/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.9796 - accuracy: 0.6639 - val_loss: 1.1099 - val_accuracy: 0.6188\n","Epoch 37/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.9745 - accuracy: 0.6640 - val_loss: 1.1061 - val_accuracy: 0.6163\n","Epoch 38/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.9658 - accuracy: 0.6678 - val_loss: 1.0988 - val_accuracy: 0.6222\n","Epoch 39/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.9576 - accuracy: 0.6716 - val_loss: 1.1330 - val_accuracy: 0.6047\n","Epoch 40/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.9522 - accuracy: 0.6738 - val_loss: 1.0821 - val_accuracy: 0.6301\n","Epoch 41/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.9418 - accuracy: 0.6775 - val_loss: 1.0832 - val_accuracy: 0.6308\n","Epoch 42/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.9341 - accuracy: 0.6812 - val_loss: 1.0969 - val_accuracy: 0.6233\n","Epoch 43/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.9254 - accuracy: 0.6821 - val_loss: 1.0738 - val_accuracy: 0.6318\n","Epoch 44/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.9171 - accuracy: 0.6859 - val_loss: 1.0723 - val_accuracy: 0.6296\n","Epoch 45/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.9127 - accuracy: 0.6876 - val_loss: 1.0681 - val_accuracy: 0.6369\n","Epoch 46/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.9083 - accuracy: 0.6875 - val_loss: 1.1103 - val_accuracy: 0.6222\n","Epoch 47/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.9015 - accuracy: 0.6904 - val_loss: 1.0621 - val_accuracy: 0.6383\n","Epoch 48/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.8961 - accuracy: 0.6918 - val_loss: 1.0930 - val_accuracy: 0.6230\n","Epoch 49/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.8882 - accuracy: 0.6940 - val_loss: 1.1122 - val_accuracy: 0.6131\n","Epoch 50/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.8828 - accuracy: 0.6959 - val_loss: 1.0475 - val_accuracy: 0.6398\n","Epoch 51/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.8743 - accuracy: 0.6986 - val_loss: 1.0680 - val_accuracy: 0.6372\n","Epoch 52/100\n","625/625 [==============================] - 32s 52ms/step - loss: 0.8683 - accuracy: 0.7020 - val_loss: 1.0445 - val_accuracy: 0.6417\n","Epoch 53/100\n","625/625 [==============================] - 32s 52ms/step - loss: 0.8644 - accuracy: 0.7028 - val_loss: 1.0743 - val_accuracy: 0.6309\n","Epoch 54/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.8576 - accuracy: 0.7067 - val_loss: 1.0510 - val_accuracy: 0.6416\n","Epoch 55/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.8498 - accuracy: 0.7110 - val_loss: 1.0521 - val_accuracy: 0.6433\n","Epoch 56/100\n","625/625 [==============================] - 31s 50ms/step - loss: 0.8484 - accuracy: 0.7096 - val_loss: 1.0395 - val_accuracy: 0.6437\n","Epoch 57/100\n","625/625 [==============================] - 32s 52ms/step - loss: 0.8395 - accuracy: 0.7144 - val_loss: 1.0535 - val_accuracy: 0.6428\n","Epoch 58/100\n","625/625 [==============================] - 32s 50ms/step - loss: 0.8362 - accuracy: 0.7154 - val_loss: 1.0392 - val_accuracy: 0.6480\n","Epoch 59/100\n","625/625 [==============================] - 30s 48ms/step - loss: 0.8344 - accuracy: 0.7146 - val_loss: 1.0395 - val_accuracy: 0.6473\n","Epoch 60/100\n","625/625 [==============================] - 29s 46ms/step - loss: 0.8276 - accuracy: 0.7172 - val_loss: 1.0458 - val_accuracy: 0.6430\n","Epoch 61/100\n","625/625 [==============================] - 29s 46ms/step - loss: 0.8247 - accuracy: 0.7157 - val_loss: 1.0484 - val_accuracy: 0.6478\n","Epoch 62/100\n","625/625 [==============================] - 29s 46ms/step - loss: 0.8183 - accuracy: 0.7202 - val_loss: 1.0677 - val_accuracy: 0.6367\n","Epoch 63/100\n","625/625 [==============================] - 29s 46ms/step - loss: 0.8125 - accuracy: 0.7231 - val_loss: 1.0542 - val_accuracy: 0.6416\n","Epoch 64/100\n","625/625 [==============================] - 29s 46ms/step - loss: 0.8089 - accuracy: 0.7224 - val_loss: 1.0370 - val_accuracy: 0.6459\n","Epoch 65/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.8088 - accuracy: 0.7233 - val_loss: 1.0349 - val_accuracy: 0.6534\n","Epoch 66/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.8033 - accuracy: 0.7235 - val_loss: 1.0379 - val_accuracy: 0.6490\n","Epoch 67/100\n","625/625 [==============================] - 32s 52ms/step - loss: 0.7982 - accuracy: 0.7274 - val_loss: 1.0362 - val_accuracy: 0.6517\n","Epoch 68/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.7944 - accuracy: 0.7279 - val_loss: 1.0565 - val_accuracy: 0.6396\n","Epoch 69/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.7893 - accuracy: 0.7292 - val_loss: 1.0673 - val_accuracy: 0.6438\n","Epoch 70/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.7874 - accuracy: 0.7288 - val_loss: 1.0411 - val_accuracy: 0.6461\n","Epoch 71/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.7818 - accuracy: 0.7311 - val_loss: 1.0352 - val_accuracy: 0.6511\n","Epoch 72/100\n","625/625 [==============================] - 32s 52ms/step - loss: 0.7730 - accuracy: 0.7369 - val_loss: 1.0582 - val_accuracy: 0.6441\n","Epoch 73/100\n","625/625 [==============================] - 32s 52ms/step - loss: 0.7742 - accuracy: 0.7335 - val_loss: 1.0432 - val_accuracy: 0.6523\n","Epoch 74/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.7709 - accuracy: 0.7360 - val_loss: 1.0251 - val_accuracy: 0.6551\n","Epoch 75/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.7642 - accuracy: 0.7396 - val_loss: 1.0505 - val_accuracy: 0.6483\n","Epoch 76/100\n","625/625 [==============================] - 33s 52ms/step - loss: 0.7662 - accuracy: 0.7367 - val_loss: 1.0523 - val_accuracy: 0.6454\n","Epoch 77/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.7617 - accuracy: 0.7405 - val_loss: 1.0292 - val_accuracy: 0.6562\n","Epoch 78/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.7577 - accuracy: 0.7429 - val_loss: 1.0476 - val_accuracy: 0.6475\n","Epoch 79/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.7533 - accuracy: 0.7427 - val_loss: 1.0498 - val_accuracy: 0.6496\n","Epoch 80/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.7476 - accuracy: 0.7438 - val_loss: 1.0727 - val_accuracy: 0.6423\n","Epoch 81/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.7472 - accuracy: 0.7445 - val_loss: 1.0337 - val_accuracy: 0.6550\n","Epoch 82/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.7409 - accuracy: 0.7472 - val_loss: 1.0410 - val_accuracy: 0.6524\n","Epoch 83/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.7351 - accuracy: 0.7502 - val_loss: 1.0722 - val_accuracy: 0.6379\n","Epoch 84/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.7335 - accuracy: 0.7490 - val_loss: 1.0663 - val_accuracy: 0.6420\n","Epoch 85/100\n","625/625 [==============================] - 32s 52ms/step - loss: 0.7319 - accuracy: 0.7493 - val_loss: 1.0428 - val_accuracy: 0.6461\n","Epoch 86/100\n","625/625 [==============================] - 32s 52ms/step - loss: 0.7278 - accuracy: 0.7492 - val_loss: 1.0261 - val_accuracy: 0.6584\n","Epoch 87/100\n","625/625 [==============================] - 32s 52ms/step - loss: 0.7276 - accuracy: 0.7517 - val_loss: 1.0285 - val_accuracy: 0.6566\n","Epoch 88/100\n","625/625 [==============================] - 32s 51ms/step - loss: 0.7217 - accuracy: 0.7519 - val_loss: 1.0501 - val_accuracy: 0.6511\n","Epoch 89/100\n","625/625 [==============================] - 32s 52ms/step - loss: 0.7210 - accuracy: 0.7544 - val_loss: 1.0368 - val_accuracy: 0.6497\n","Epoch 90/100\n","625/625 [==============================] - 32s 52ms/step - loss: 0.7184 - accuracy: 0.7549 - val_loss: 1.0422 - val_accuracy: 0.6511\n","Epoch 91/100\n","625/625 [==============================] - 32s 52ms/step - loss: 0.7131 - accuracy: 0.7562 - val_loss: 1.0290 - val_accuracy: 0.6580\n","Epoch 92/100\n","625/625 [==============================] - 32s 52ms/step - loss: 0.7134 - accuracy: 0.7557 - val_loss: 1.0473 - val_accuracy: 0.6523\n","Epoch 93/100\n","625/625 [==============================] - 32s 52ms/step - loss: 0.7073 - accuracy: 0.7586 - val_loss: 1.0605 - val_accuracy: 0.6423\n","Epoch 94/100\n","625/625 [==============================] - 33s 52ms/step - loss: 0.7065 - accuracy: 0.7579 - val_loss: 1.0618 - val_accuracy: 0.6491\n","Epoch 95/100\n","625/625 [==============================] - 32s 52ms/step - loss: 0.7012 - accuracy: 0.7618 - val_loss: 1.0480 - val_accuracy: 0.6524\n","Epoch 96/100\n","625/625 [==============================] - 33s 52ms/step - loss: 0.6983 - accuracy: 0.7631 - val_loss: 1.0630 - val_accuracy: 0.6509\n","Epoch 97/100\n","625/625 [==============================] - 32s 52ms/step - loss: 0.6998 - accuracy: 0.7606 - val_loss: 1.0660 - val_accuracy: 0.6445\n","Epoch 98/100\n","625/625 [==============================] - 32s 52ms/step - loss: 0.6925 - accuracy: 0.7644 - val_loss: 1.0550 - val_accuracy: 0.6519\n","Epoch 99/100\n","625/625 [==============================] - 32s 52ms/step - loss: 0.6923 - accuracy: 0.7656 - val_loss: 1.0489 - val_accuracy: 0.6551\n","Epoch 100/100\n","625/625 [==============================] - 32s 52ms/step - loss: 0.6873 - accuracy: 0.7659 - val_loss: 1.0515 - val_accuracy: 0.6495\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f6f11cb1ad0>"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":545},"id":"ztUmGFxgbbVO","executionInfo":{"status":"ok","timestamp":1635950845953,"user_tz":-300,"elapsed":1382,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"19c10c06-4083-4b0b-9aad-80b8caa31c39"},"source":["accuracy = history.history['accuracy']\n","val_accuracy = history.history['val_accuracy']\n","loss = history.history['loss']\n","val_loss = history.history['val_loss']\n","epochs = range(len(accuracy))\n","plt.plot(epochs, accuracy, 'blue', label='Training accuracy')\n","plt.plot(epochs, val_accuracy, 'red', label='Validation accuracy')\n","plt.title('Training and validation accuracy')\n","plt.legend()\n","plt.figure()\n","plt.plot(epochs, loss, 'blue', label='Training loss')\n","plt.plot(epochs, val_loss, 'red', label='Validation loss')\n","plt.title('Training and validation loss')\n","plt.legend()\n","plt.show()"],"execution_count":36,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pBFG4nXWUmZ0","executionInfo":{"status":"ok","timestamp":1635950861691,"user_tz":-300,"elapsed":2886,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"721e6f70-6831-410d-bbe2-f0cdef2c862e"},"source":["test_score=model.evaluate(test_X, test_Y_one_hot, verbose=0)\n","\n","print('Loss on test data: ', test_score[0])\n","print('Accuracy on test data', test_score[1])\n","\n"],"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["Loss on test data:  1.0674940347671509\n","Accuracy on test data 0.6438000202178955\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OT8UDTECZtni","executionInfo":{"status":"ok","timestamp":1635950936887,"user_tz":-300,"elapsed":2951,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"43f857a0-1362-4e07-953a-d2eb5626a1d7"},"source":["preds=model.predict(test_X)\n","preds"],"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[7.5164071e-04, 6.5585467e-05, 4.1766241e-02, ..., 8.3677506e-04,\n","        8.4856912e-02, 3.8105863e-04],\n","       [1.3035286e-02, 3.9864072e-01, 3.3242401e-07, ..., 7.0388047e-09,\n","        5.7455420e-01, 1.3768400e-02],\n","       [4.7025847e-01, 8.4392399e-02, 1.1255322e-02, ..., 8.9903869e-04,\n","        3.6500385e-01, 6.4236313e-02],\n","       ...,\n","       [1.0015100e-05, 2.2385468e-06, 7.0499763e-02, ..., 1.6622102e-02,\n","        1.9809355e-05, 4.9719824e-06],\n","       [2.4754116e-01, 4.1299620e-01, 5.6261052e-03, ..., 5.4320652e-04,\n","        5.3403823e-04, 2.1910425e-03],\n","       [3.5092256e-05, 7.8840494e-05, 1.1111365e-03, ..., 8.0714542e-01,\n","        2.8324255e-05, 1.5337742e-04]], dtype=float32)"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8RXGNxOhdU-k","executionInfo":{"status":"ok","timestamp":1635950939414,"user_tz":-300,"elapsed":399,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"f9a031ba-2e98-45cb-a9fd-72673da9b2f7"},"source":["test_Y_one_hot"],"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0., 0., 0., ..., 0., 0., 0.],\n","       [0., 0., 0., ..., 0., 1., 0.],\n","       [0., 0., 0., ..., 0., 1., 0.],\n","       ...,\n","       [0., 0., 0., ..., 0., 0., 0.],\n","       [0., 1., 0., ..., 0., 0., 0.],\n","       [0., 0., 0., ..., 1., 0., 0.]], dtype=float32)"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-FvD9flIddAT","executionInfo":{"status":"ok","timestamp":1635950944209,"user_tz":-300,"elapsed":410,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"4328ff44-59dd-49c3-c219-08da20c068fd"},"source":["y_pred=np.argmax(preds, axis=1)\n","y_pred"],"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([3, 8, 0, ..., 5, 1, 7])"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FeTam0nUdsRW","executionInfo":{"status":"ok","timestamp":1635950946855,"user_tz":-300,"elapsed":592,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"89442864-e3a1-4509-ab28-422ca82df01f"},"source":["test_Y"],"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[3],\n","       [8],\n","       [8],\n","       ...,\n","       [5],\n","       [1],\n","       [7]], dtype=uint8)"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lyJ17hn-d1gD","executionInfo":{"status":"ok","timestamp":1635950947540,"user_tz":-300,"elapsed":9,"user":{"displayName":"Usman Hasan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06267623168144839332"}},"outputId":"9c973ab8-b21d-4423-e857-d79b8ee8f1e4"},"source":["from sklearn.metrics import classification_report\n","\n","print(classification_report(test_Y, y_pred))\n"],"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.64      0.71      0.67      1000\n","           1       0.76      0.77      0.77      1000\n","           2       0.48      0.54      0.51      1000\n","           3       0.48      0.39      0.43      1000\n","           4       0.63      0.52      0.57      1000\n","           5       0.52      0.59      0.55      1000\n","           6       0.65      0.83      0.73      1000\n","           7       0.73      0.72      0.72      1000\n","           8       0.81      0.70      0.75      1000\n","           9       0.77      0.68      0.72      1000\n","\n","    accuracy                           0.64     10000\n","   macro avg       0.65      0.64      0.64     10000\n","weighted avg       0.65      0.64      0.64     10000\n","\n"]}]},{"cell_type":"code","metadata":{"id":"m6Naks4Oed_A"},"source":[""],"execution_count":null,"outputs":[]}]}